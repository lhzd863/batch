package com.batch.master;

import com.batch.util.Configuration;
import com.batch.util.StrVal;

public class DefaultConf {

    public static void initialize(Configuration conf){
    	if(conf.get(StrVal.SYS_LOG_PATH)==null){
			conf.set(StrVal.SYS_LOG_PATH,"./");
		}
    	if(conf.get(StrVal.SYS_DIR_DELIMITER)==null){
			conf.set(StrVal.SYS_DIR_DELIMITER,"/");
		}
    	if(conf.get(StrVal.SYSTEM_VAR_MASTER)==null){
			conf.set(StrVal.SYSTEM_VAR_MASTER,"MASTER");
		}
    	if(conf.get(StrVal.SYSTEM_VAR_MASTER_LOCK)==null){
			conf.set(StrVal.SYSTEM_VAR_MASTER_LOCK,"lock");
		}
    	if(conf.get(StrVal.SYSTEM_VAR_SLAVE)==null){
			conf.set(StrVal.SYSTEM_VAR_SLAVE,"SLAVE");
		}
    	if(conf.get(StrVal.SYSTEM_VAR_SLAVE_LIST)==null){
			conf.set(StrVal.SYSTEM_VAR_SLAVE_LIST,"lst");
		}
    	if(conf.get(StrVal.SYSTEM_VAR_INSTANCE)==null){
			conf.set(StrVal.SYSTEM_VAR_INSTANCE,"instance");
		}
    	if(conf.get(StrVal.SYSTEM_VAR_STREAM)==null){
			conf.set(StrVal.SYSTEM_VAR_STREAM,"stream");
		}
    	if(conf.get(StrVal.SYSTEM_VAR_LIST)==null){
			conf.set(StrVal.SYSTEM_VAR_LIST,"list");
		}
    	if(conf.get(StrVal.SYSTEM_VAR_STATUS)==null){
			conf.set(StrVal.SYSTEM_VAR_STATUS,"status");
		}
    	if(conf.get(StrVal.SYSTEM_VAR_NOTICE)==null){
			conf.set(StrVal.SYSTEM_VAR_NOTICE,"notice");
		}
    	//flag
    	if(conf.get(StrVal.SYS_DEBUG_FLAG)==null){
			conf.set(StrVal.SYS_DEBUG_FLAG,"Y");
		}
    	if(conf.get(StrVal.SYSTEM_RUNNING_FLAG)==null){
			conf.set(StrVal.SYSTEM_RUNNING_FLAG,"0");
		}
    	if(conf.get(StrVal.SYSTEM_SUCCESS_FLAG)==null){
			conf.set(StrVal.SYSTEM_SUCCESS_FLAG,"Y");
		}
    	if(conf.get(StrVal.SYSTEM_FAIL_FLAG)==null){
			conf.set(StrVal.SYSTEM_FAIL_FLAG,"N");
		}
    	if(conf.get(StrVal.SYS_HEARTBEADT_TIME)==null){
			conf.set(StrVal.SYS_HEARTBEADT_TIME,"10000");
		}
    	if(conf.get(StrVal.SYSTEM_STATUS_RUNNING)==null){
			conf.set(StrVal.SYSTEM_STATUS_RUNNING,"Running");
		}
    	if(conf.get(StrVal.SYSTEM_STATUS_READY)==null){
			conf.set(StrVal.SYSTEM_STATUS_READY,"Ready");
		}
    	if(conf.get(StrVal.SYSTEM_STATUS_FAIL)==null){
			conf.set(StrVal.SYSTEM_STATUS_FAIL,"Fail");
		}
    	if(conf.get(StrVal.SYSTEM_STATUS_SUCCESS)==null){
			conf.set(StrVal.SYSTEM_STATUS_SUCCESS,"Success");
		}
    	if(conf.get(StrVal.SYSTEM_STATUS_PENDING)==null){
			conf.set(StrVal.SYSTEM_STATUS_PENDING,"Pending");
		}
    	if(conf.get(StrVal.SYSTEM_STATUS_SUBMIT)==null){
			conf.set(StrVal.SYSTEM_STATUS_SUBMIT,"Submit");
		}
    	if(conf.get(StrVal.SYSTEM_CONTROL_DELIMITER)==null){
			conf.set(StrVal.SYSTEM_CONTROL_DELIMITER,"\\.");
		}
    	if(conf.get(StrVal.SYSTEM_CONTROL_DEL)==null){
			conf.set(StrVal.SYSTEM_CONTROL_DEL,".");
		}
    	
    	if(conf.get(StrVal.SYSTEM_KEYVAL_DELIMITER)==null){
			conf.set(StrVal.SYSTEM_KEYVAL_DELIMITER,"=");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_TRIGGERTYPE)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_TRIGGERTYPE,"triggertype");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_TRIGGERTIME)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_TRIGGERTIME,"triggertime");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_TXDATE)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_TXDATE,"txdate");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_PRIORITY)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_PRIORITY,"priority");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_CPUPNT)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_CPUPNT,"cpupnt");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_MEMPNT)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_MEMPNT,"mempnt");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_PRCCNT)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_PRCCNT,"prccnt");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_TIMESTAMP)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_TIMESTAMP,"timestamp");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_CMD)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_CMD,"cmd");
		}
    	if(conf.get(StrVal.SYS_LIMIT_SLAVE_CPU)==null){
			conf.set(StrVal.SYS_LIMIT_SLAVE_CPU,"98");
		}
    	if(conf.get(StrVal.SYS_LIMIT_SLAVE_MEM)==null){
			conf.set(StrVal.SYS_LIMIT_SLAVE_MEM,"95");
		}
    	if(conf.get(StrVal.SYS_LIMIT_SLAVE_PRC)==null){
			conf.set(StrVal.SYS_LIMIT_SLAVE_PRC,"5");
		}
    	if(conf.get(StrVal.SYSTEM_START_TIME)==null){
			conf.set(StrVal.SYSTEM_START_TIME,"starttime");
		}
    	if(conf.get(StrVal.SYSTEM_END_TIME)==null){
			conf.set(StrVal.SYSTEM_END_TIME,"endtime");
		}
    	if(conf.get(StrVal.SYS_LIMIT_JOB_TIME)==null){
			conf.set(StrVal.SYS_LIMIT_JOB_TIME,"10800000");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_STARTTIME)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_STARTTIME,"starttime");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_ENDTIME)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_ENDTIME,"endtime");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_NODE)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_NODE,"node");
		}
    	if(conf.get(StrVal.SYSTEM_ROW_DELIMITER)==null){
			conf.set(StrVal.SYSTEM_ROW_DELIMITER,"\n");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_STATUS)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_STATUS,"status");
		}
    	if(conf.get(StrVal.SYSTEM_MASTER_DIR_PARAMETER)==null){
			conf.set(StrVal.SYSTEM_MASTER_DIR_PARAMETER,"parameter");
		}
    	if(conf.get(StrVal.SYS_DIR_SCRIPT)==null){
			conf.set(StrVal.SYS_DIR_SCRIPT,"./APP");
		}
    	if(conf.get(StrVal.SYS_CMD_DELIMITER)==null){
			conf.set(StrVal.SYS_CMD_DELIMITER,";");
		}
    	if(conf.get(StrVal.SYS_SCRIPT_ENDWITH)==null){
			conf.set(StrVal.SYS_SCRIPT_ENDWITH,".sh");
		}
    	if(conf.get(StrVal.SYS_SCRIPT_ENDWITH_CMD)==null){
			conf.set(StrVal.SYS_SCRIPT_ENDWITH_CMD,"sh ");
		}
    	if(conf.get(StrVal.SYSTEM_KEYWORK_CTL)==null){
			conf.set(StrVal.SYSTEM_KEYWORK_CTL,"ctl");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_SEQUENCE)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_SEQUENCE,"sequence");
		}
    	if(conf.get(StrVal.SYSTEM_VAR_FINISH)==null){
			conf.set(StrVal.SYSTEM_VAR_FINISH,"FINISH");
		}
    	if(conf.get(StrVal.RESOURCE_CMD_CPU)==null){
			conf.set(StrVal.RESOURCE_CMD_CPU,"");
		}
    	if(conf.get(StrVal.RESOURCE_CMD_MEM)==null){
			conf.set(StrVal.RESOURCE_CMD_MEM,"");
		}
    	if(conf.get(StrVal.RESOURCE_CMD_MEM)==null){
			conf.set(StrVal.RESOURCE_CMD_MEM,"");
		}
    	if(conf.get(StrVal.CTL_CONF_JOB_DELIMITER)==null){
			conf.set(StrVal.CTL_CONF_JOB_DELIMITER,":");
		}
    	if(conf.get(StrVal.TRIGGER_JOB_LOG_PATH)==null){
			conf.set(StrVal.TRIGGER_JOB_LOG_PATH,".");
		}
    	if(conf.get(StrVal.TRIGGER_JOB_LOG_NAME)==null){
			conf.set(StrVal.TRIGGER_JOB_LOG_NAME,"tigger_job");
		}
    	//job attribute
    	if(conf.get(StrVal.JOB_ATTR_POOL)==null){
			conf.set(StrVal.JOB_ATTR_POOL,"pool");
		}
    	if(conf.get(StrVal.JOB_ATTR_SYSTEM)==null){
			conf.set(StrVal.JOB_ATTR_SYSTEM,"system");
		}
    	if(conf.get(StrVal.JOB_ATTR_JOB)==null){
			conf.set(StrVal.JOB_ATTR_JOB,"job");
		}
    	if(conf.get(StrVal.JOB_ATTR_NODE)==null){
			conf.set(StrVal.JOB_ATTR_NODE,"node");
		}
    	if(conf.get(StrVal.JOB_ATTR_JOBTYPE)==null){
			conf.set(StrVal.JOB_ATTR_JOBTYPE,"jobtype");
		}
    	if(conf.get(StrVal.JOB_ATTR_CHECKTIMEWINDOW)==null){
			conf.set(StrVal.JOB_ATTR_CHECKTIMEWINDOW,"checktimewindow");
		}
    	if(conf.get(StrVal.JOB_ATTR_CHECKTIMETRIGGER)==null){
			conf.set(StrVal.JOB_ATTR_CHECKTIMETRIGGER,"checktimetrigger");
		}
    	if(conf.get(StrVal.JOB_ATTR_CHECKCALENDAR)==null){
			conf.set(StrVal.JOB_ATTR_CHECKCALENDAR,"checkcalendar");
		}
    	if(conf.get(StrVal.JOB_ATTR_CHECKLASTSTATUS)==null){
			conf.set(StrVal.JOB_ATTR_CHECKLASTSTATUS,"checklaststatus");
		}
    	if(conf.get(StrVal.JOB_ATTR_PRIORITY)==null){
			conf.set(StrVal.JOB_ATTR_PRIORITY,"priority");
		}
    	if(conf.get(StrVal.JOB_ATTR_ENABLE)==null){
			conf.set(StrVal.JOB_ATTR_ENABLE,"enable");
		}
    	if(conf.get(StrVal.JOB_ATTR_TRIGGER_TYPE)==null){
			conf.set(StrVal.JOB_ATTR_TRIGGER_TYPE,"triggertype");
		}
    	if(conf.get(StrVal.JOB_ATTR_EXPRESSION)==null){
			conf.set(StrVal.JOB_ATTR_EXPRESSION,"expression");
		}
    	if(conf.get(StrVal.JOB_ATTR_EXPRESSION)==null){
			conf.set(StrVal.JOB_ATTR_EXPRESSION,"expression");
		}
    	if(conf.get(StrVal.JOB_ATTR_BATCHNUM)==null){
			conf.set(StrVal.JOB_ATTR_BATCHNUM,"batchnum");
		}
    	if(conf.get(StrVal.JOB_ATTR_CMD)==null){
			conf.set(StrVal.JOB_ATTR_CMD,"cmd");
		}
    	//job conf
    	if(conf.get(StrVal.JOB_CONF_TYPE)==null){
			conf.set(StrVal.JOB_CONF_TYPE,"file");
		}
    	if(conf.get(StrVal.JOB_FILE_DELIMITER)==null){
			conf.set(StrVal.JOB_FILE_DELIMITER,"\\|");
		}
    	if(conf.get(StrVal.CONF_REF_TIME)==null){
			conf.set(StrVal.CONF_REF_TIME,"1200000");
		}
    	if(conf.get(StrVal.LOG_RANGE_DELIMITER)==null){
			conf.set(StrVal.LOG_RANGE_DELIMITER,"|");
		}
    	if(conf.get(StrVal.SYSTEM_PARAMETER_FORMAT)==null){
			conf.set(StrVal.SYSTEM_PARAMETER_FORMAT,"${ctl}_${txdate}");
		}
    	//Map key
    	if(conf.get(StrVal.MAP_KEY_POOL)==null){
			conf.set(StrVal.MAP_KEY_POOL,"pool");
		}
    	if(conf.get(StrVal.MAP_KEY_SYS)==null){
			conf.set(StrVal.MAP_KEY_SYS,"sys");
		}
    	if(conf.get(StrVal.MAP_KEY_JOB)==null){
			conf.set(StrVal.MAP_KEY_JOB,"job");
		}
    	if(conf.get(StrVal.MAP_KEY_BATCHNUM)==null){
			conf.set(StrVal.MAP_KEY_BATCHNUM,"batchnum");
		}
    	if(conf.get(StrVal.MAP_KEY_TXDATE)==null){
			conf.set(StrVal.MAP_KEY_TXDATE,"txdate");
		}
    	//config sql
    	if(conf.get(StrVal.SQL_SHD_JOB_INFO)==null){
			conf.set(StrVal.SQL_SHD_JOB_INFO,"select * from ptemp.shd_job_info");
		}
    	if(conf.get(StrVal.SQL_SHD_JOB_TRIGGER)==null){
			conf.set(StrVal.SQL_SHD_JOB_TRIGGER,"select * from ptemp.shd_job_trigger");
		}
    	if(conf.get(StrVal.SQL_SHD_JOB_STATUS)==null){
			conf.set(StrVal.SQL_SHD_JOB_STATUS,"insert into ptemp.shd_job_status(Pool,Sys,Job,SlvNode,BatchNum,Status,Txdate,StartTime,EndTime) values(?,?,?,?,?,?,?,?,?);");
		}
    	if(conf.get(StrVal.SQL_SHD_JOB_STEP)==null){
			conf.set(StrVal.SQL_SHD_JOB_STEP,"select * from ptemp.shd_job_step");
		}
    	if(conf.get(StrVal.SYS_LOG_KEEPPERIOD)==null){
			conf.set(StrVal.SYS_LOG_KEEPPERIOD,"7");
		}
    	
	}
}
